package com.example.practice.basicknowledge;

/**
 * 1.GC调优目标：响应速度，吞吐量
 * 2.GC分代收集算法：
 * 现在的垃圾收集器基本都是采用分代收集算法，思想：将java的堆内存逻辑上分成2块：新生代，老年代，针对不同存活周期，不同大小的对象采取不同的垃圾回收策略。
 *(1)新生代：大多数对象在新生代中被创建，很多对象的生命周期很短。每次新生代的垃圾回收后只有少量对象存活，所以使用复制算法，只需少量的复制操作成本就可以
 * 完成回收。
 * 新生代内又分三个区：一个Eden区，两个Survivor区(S0、S1，又称From Survivor、To Survivor)，大部分对象在Eden区中生成。当Eden区满时，还存活的对象将被复制
 * 到两个Survivor区（中的一个）。当这个Survivor区满时，此区的存活且不满足晋升到老年代条件的对象将被复制到另外一个Survivor区。对象每经历一次复制，年龄加1，
 * 达到晋升年龄阈值后，转移到老年代
 *(2)老年代：在新生代中经历了n次垃圾回收后仍然存活的对象，会被放到老年代，该区域中对象存活率高。老年代的垃圾回收通常使用“标记-整理”算法。
 *
 *
 *
 *
 *
 *
 *
 *
 */
public class GC1 {
}
